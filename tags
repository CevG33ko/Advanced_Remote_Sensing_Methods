!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/worldpotato/repos/uni/Advanced_Remote_Sensing_Methods/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210110.0/
A	assignment_1/polar_coords.m	/^A = [4565789.69, 5478954.73, 982.04, 235.67829145000];$/;"	v
Bibtex file	README.md	/^## Bibtex file$/;"	s	chapter:Structure
Build Status	README.md	/^# Build Status$/;"	c
Content	README.md	/^## Content$/;"	s	chapter:Structure
F1_score	assignment_1/problem1.m	/^F1_score = calc_f1(accuracy_table);$/;"	v
FN	assignment_1/calc_f1.m	/^FN = sum_test_areas' - diag(confusion_matrix);$/;"	v
FN	assignment_1/problem1.m	/^FN = sum_test_areas' - diag(accuracy_table);$/;"	v
FP	assignment_1/calc_f1.m	/^FP = sum_classification - diag(confusion_matrix);$/;"	v
FP	assignment_1/problem1.m	/^FP = sum_classification - diag(accuracy_table);$/;"	v
FP	assignment_1/problem2.m	/^FP = temp_ones - beeches;$/;"	v
FP_rate	assignment_1/problem1.m	/^FP_rate = FP.\/sum_classification;$/;"	v
Images	README.md	/^## Images$/;"	s	chapter:Structure
My template for LaTeX documents.	README.md	/^# My template for LaTeX documents. $/;"	c
N	assignment_1/question3.m	/^N = 72;$/;"	v
Preamble	README.md	/^## Preamble$/;"	s	chapter:Structure
R1	assignment_1/polar_coords.m	/^R1 = [0, 0, 0, 235.67829151667];$/;"	v
R2	assignment_1/polar_coords.m	/^R2 = [0, 0, 0, 235.67829153334];$/;"	v
S	assignment_1/question3.m	/^S = (1-epsilon) * n;$/;"	v
Sourcecode	README.md	/^## Sourcecode$/;"	s	chapter:Structure
Structure	README.md	/^# Structure$/;"	c
TN	assignment_1/calc_TN.m	/^TN = zeros(size_matrix,1);$/;"	v
TN	assignment_1/calc_f1.m	/^TN = calc_TN(confusion_matrix);$/;"	v
TN	assignment_1/problem1.m	/^TN = calc_TN(accuracy_table);$/;"	v
TP	assignment_1/calc_f1.m	/^TP = diag(confusion_matrix);$/;"	v
TP	assignment_1/problem1.m	/^TP = diag(accuracy_table);$/;"	v
TP	assignment_1/problem2.m	/^TP = temp_ones - spruces;$/;"	v
TP_rate	assignment_1/problem1.m	/^TP_rate = TP.\/(FP+FN);$/;"	v
Vim	README.md	/^# Vim$/;"	c
accuracy_table	assignment_1/problem1.m	/^accuracy_table = [ 70 1 3 6;$/;"	v
beeches	assignment_1/problem2.m	/^beeches = normcdf(-6:0.1:6, 0, 1);$/;"	v
beeches	assignment_1/problem2.m	/^beeches = normcdf([-1 1 1.5], 0, 1);$/;"	v
beeches_fp	assignment_1/problem2.m	/^beeches_fp = 1 - beeches_tn;$/;"	v
beeches_tn	assignment_1/problem2.m	/^beeches_tn = beeches(3);$/;"	v
c	assignment_1/polar_coords.m	/^c = 3000000000;$/;"	v
calc_TN	assignment_1/calc_TN.m	/^function [TN] = calc_TN(confusion_matrix)$/;"	f
calc_f1	assignment_1/calc_f1.m	/^function f1 = calc_f1(confusion_matrix)$/;"	f
categories	assignment_1/problem1.m	/^categories = ["Spruce", "Beech", "Fir", "Dead Tree"];$/;"	v
commision	assignment_1/problem1.m	/^commision = 1 - TP.\/(TP+FP);$/;"	v
epsilon	assignment_1/question3.m	/^epsilon = 0.3; % relative number of outlier$/;"	v
f1	assignment_1/calc_f1.m	/^f1 = (2*TP).\/(2*TP+FN+FP);$/;"	v
failure_1	assignment_1/problem1.m	/^failure_1 = sum_classification - TP;$/;"	v
failure_2	assignment_1/problem1.m	/^failure_2 = sum_test_areas - TP';$/;"	v
increment	assignment_1/polar_coords.m	/^increment = (c*r.*0.5)';$/;"	v
kappa	assignment_1/problem1.m	/^kappa = (sum_pixels * sum(TP) - temp_cross_product_sum)\/(sum_pixels^2 - temp_cross_product_sum)/;"	v
n	assignment_1/question3.m	/^n =  log(1 - p)\/log(1 - (1-epsilon)^s);$/;"	v
number_of_values	assignment_1/problem2.m	/^number_of_values = size(beeches, 1);$/;"	v
ommision	assignment_1/problem1.m	/^ommision = 1 - TP.\/(TP+FN);$/;"	v
overall_accuracy	assignment_1/problem1.m	/^overall_accuracy = sum(TP)\/sum_pixels * 100;$/;"	v
p	assignment_1/question3.m	/^p = 0.97; % propability of outlier free consensus set$/;"	v
precision	assignment_1/problem1.m	/^precision = TP.\/(TP+FP); % correctness$/;"	v
r	assignment_1/polar_coords.m	/^r = [0.1; 0.05; -0.9937];$/;"	v
recall	assignment_1/problem1.m	/^recall = TP.\/(TP+FN);    % completeness$/;"	v
s	assignment_1/question3.m	/^s = 7; % from table$/;"	v
size_matrix	assignment_1/calc_TN.m	/^size_matrix = size(confusion_matrix,2);$/;"	v
spruces	assignment_1/problem2.m	/^spruces = normcdf(-6:0.1:6, 2.5, 1);$/;"	v
spruces	assignment_1/problem2.m	/^spruces = normcdf([-1 1 1.5], 2.5, 1);$/;"	v
spruces_fn	assignment_1/problem2.m	/^spruces_fn = spruces(3);$/;"	v
spruces_tp	assignment_1/problem2.m	/^spruces_tp = 1 - spruces_fn;$/;"	v
sum_classification	assignment_1/calc_f1.m	/^sum_classification = sum(confusion_matrix,2); % the rows$/;"	v
sum_classification	assignment_1/problem1.m	/^sum_classification = sum(accuracy_table,2) % the rows$/;"	v
sum_pixels	assignment_1/problem1.m	/^sum_pixels = sum(sum_classification)$/;"	v
sum_test_areas	assignment_1/calc_f1.m	/^sum_test_areas = sum(confusion_matrix); % the columns$/;"	v
sum_test_areas	assignment_1/problem1.m	/^sum_test_areas = sum(accuracy_table) % the columns$/;"	v
temp_cross_product_sum	assignment_1/problem1.m	/^temp_cross_product_sum = sum(sum_classification.*sum_test_areas');$/;"	v
temp_ones	assignment_1/problem2.m	/^temp_ones = ones(1, number_of_values);$/;"	v
